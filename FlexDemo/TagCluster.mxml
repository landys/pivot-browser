<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	horizontalScrollPolicy="off" verticalScrollPolicy="off"
	click="wholeClick(event);">
	<mx:Metadata>
		[Event(name="clusterClick", type="hisa.event.ClusterClickEvent")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import hisa.event.ClusterClickEvent;
			import mx.controls.LinkButton;
			import mx.collections.ArrayCollection;
			
			// datas in tagcluster
			[Bindable]
			public var tags:ArrayCollection;
			
			// pic in tagcluser
			[Bindable]
			public var pics:ArrayCollection;
			
			// use as the tagCluster id
			public var index:int;
			
			// whether tags in tagcluster is active, means it can accept click.
			public var isActive:Boolean = true;
			
			[Bindable]
			public var hasPics:Boolean = false;
			
			public function setStyleName(name:String):void
			{
				styleName = name;
			}
			
			public function hindAllTags():void
			{
				//trace(index+":TagCluster.hindAllTags() begin");
				for (var i:int=0; i<lbtns.length; i++)
				{
					lbtns[i].visible = false;
				}
				lbtnMore.visible = false;
			}
			
			private function doInitTagCluster(cw:int, ch:int, xo:int=0, yo:int=0):void
			{
				var i:int = 0;
				var imgs:Array = [img1, img2, img3];
				if (hasPics && pics != null && pics.length > 0)
				{
					hboxPics.height = cw / 3 - 5;
					for (i=0; i<3 && i<pics.length; ++i)
					{
						imgs[i].width = cw / 3 - 5;
						imgs[i].source = pics.getItemAt(i);
					}
					ch -= hboxPics.height;
				}
				/*
				for (; i<3; ++i)
				{
					imgs[i].source = null;
				}
				*/
				
				//trace(index+":TagCluster.doInitTagCluster(cw:int="+cw+", ch:int="+ch+") begin");
				if (lbtns == null || lbtns.length == 0)
				{
					return;	
				}
				
				cw -= xo * 2;
				ch -= yo * 2;
				lbtns[0].x = xo;
				lbtns[0].y = yo;
				lbtns[0].visible = true;
				lbtnMore.visible = false;
				
				// replace all linkbuttons
				for (i=1; i<lbtns.length; i++)
				{
					// check current row
					if (lbtns[i-1].x + lbtns[i-1].width + lbtns[i].width - cw > 0)
					{	// check new row
						if (lbtns[i-1].y + lbtns[i-1].height + lbtns[i].height - ch > 0)
						{	// no new row
							if (lbtns[i-1].x + lbtns[i-1].width + lbtnMore.width - cw > 0)
							{
								lbtnMore.x = lbtns[i-1].x + lbtns[i-1].width;
								lbtnMore.y = lbtns[i-1].y;
								i++;
							}
							else
							{
								lbtnMore.x = lbtns[i-1].x;
								lbtnMore.y = lbtns[i-1].y;
							}
							lbtns[i-1].visible = false;
							lbtnMore.visible = true;
							break;
						}
						else
						{	// new row
							lbtns[i].x = xo;
							lbtns[i].y = lbtns[i-1].y + lbtns[i-1].height;
						}
					}
					else
					{	// current row
						lbtns[i].x = lbtns[i-1].x + lbtns[i-1].width;
						lbtns[i].y = lbtns[i-1].y;
					}
					lbtns[i].visible = true;
				}
				for (; i<lbtns.length; i++)
				{
					lbtns[i].visible = false;
				}
			}
			
			private function initTagCluster(xo:int=0, yo:int=0):void
			{
				//trace(index+":TagCluster.initTagCluster() begin");
				doInitTagCluster(width, height, xo, yo);
			}
			
			// click more button
			private function moreClick(event:MouseEvent):void
			{
				var clusterEvent:ClusterClickEvent = new ClusterClickEvent(ClusterClickEvent.CLUSTER_CLICK, index, 
					ClusterClickEvent.MORE_TARGET);
				doDispatchEvent(clusterEvent, event);
			}
			
			// click the tag
			private function tagClick(event:MouseEvent):void
			{
				var clusterEvent:ClusterClickEvent = new ClusterClickEvent(ClusterClickEvent.CLUSTER_CLICK, 
						index, ClusterClickEvent.TAG_TARGET, event.currentTarget.label);
				doDispatchEvent(clusterEvent, event);		
				
			}
			
			// click any place of the vacant
			private function wholeClick(event:MouseEvent):void
			{
				var clusterEvent:ClusterClickEvent = new ClusterClickEvent(ClusterClickEvent.CLUSTER_CLICK, index);
				doDispatchEvent(clusterEvent, event);
			}
			
			// click the pic
			private function picClick(event:MouseEvent, picIndex:int):void
			{
				var clusterEvent:ClusterClickEvent = new ClusterClickEvent(ClusterClickEvent.CLUSTER_CLICK, index, 
					ClusterClickEvent.PIC_TARGET, picIndex);
				doDispatchEvent(clusterEvent, event); 
			}
			
			private function doDispatchEvent(clusterEvent:ClusterClickEvent, origEvent:Event):void
			{
				if (isActive) 
				{
					dispatchEvent(clusterEvent);
				}
				
				origEvent.stopPropagation();
			}
			
			public function clearCluster():void
			{
				img1.source = null;
				img2.source = null;
				img3.source = null;
				pics = null;
				tags = null;
			}
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%"
		verticalScrollPolicy="off" horizontalScrollPolicy="off">
		<mx:HBox id="hboxPics" width="100%" height="0" 
			verticalScrollPolicy="off" horizontalScrollPolicy="off"
			visible="{hasPics}">
			<mx:Image id="img1" click="picClick(event, 0);"/>
			<mx:Image id="img2" click="picClick(event, 1);"/>
			<mx:Image id="img3" click="picClick(event, 2);"/>
		</mx:HBox>
		<mx:Canvas width="100%" height="100%"
			verticalScrollPolicy="off" horizontalScrollPolicy="off" updateComplete="initTagCluster();">
			<mx:Repeater id="rp" dataProvider="{tags}">
				<mx:LinkButton id="lbtns" height="20" maxWidth="72"
					styleName="tagLinkButton"
				    label="{rp.currentItem.label}" 
				    click="tagClick(event);"/>
		    </mx:Repeater>
		    <mx:LinkButton id="lbtnMore" height="20" width="18"
				styleName="tagLinkButton"
			    label="..." visible="false"
			    click="moreClick(event);"/>
		</mx:Canvas>
	</mx:VBox>
	
</mx:Canvas>
