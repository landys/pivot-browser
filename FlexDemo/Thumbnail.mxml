<?xml version="1.0" encoding="utf-8"?>

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	implements="mx.controls.listClasses.IDropInListItemRenderer"
	width="120" height="120" initialize="initData()"
    paddingTop="0" paddingBottom="0"
    verticalScrollPolicy="off" horizontalScrollPolicy="off"
	verticalGap="0" horizontalAlign="center" 
	rollOver="updatePosition(event)"
	rollOut="updatePosition(event)">
	<!--
	<mx:Metadata>
		[Event("showBigPhoto")]
	</mx:Metadata>
	-->
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.controls.Alert;
		    import mx.events.FlexEvent;
		    import mx.events.ListEvent;
		    import mx.core.DragSource;
		    import mx.managers.DragManager;
		    import mx.controls.listClasses.ListBase;
			import mx.controls.listClasses.IDropInListItemRenderer;
			import mx.controls.listClasses.BaseListData;
		
			import mx.resources.*;
			
//		[ResourceBundle("strings")]
	//		[Bindable]
	//		private var stringResources:ResourceBundle;
			
			private function initData():void
			{
				//imgUrl = data.source;
				//ofWord = stringResources.getString("ofWordKey");
			}

		    [Bindable]
			private var listOwner:ListBase;
			[Bindable]
			private var index:int;
			
			[Bindable]
           	public var imgUrl:String;
		    
			private var _listData:BaseListData;

		    [Bindable]
		    public function get listData():BaseListData
		    {
		    	return _listData;
		    }
		    
		    public function set listData(value:BaseListData):void
		    {
		    	_listData = value;
		    	if (_listData.owner != listOwner)
		    	{
		    	    if (listOwner != null) //not sure this would really happen
		    	    {
    		    	    listOwner.removeEventListener(FlexEvent.VALUE_COMMIT, updatePosition);
    		    	    listOwner.removeEventListener(Event.CHANGE, updatePosition);
		    	    }
		    	    listOwner = _listData.owner as ListBase;
		    	    listOwner.addEventListener(FlexEvent.VALUE_COMMIT, updatePosition);
		    	    listOwner.addEventListener(Event.CHANGE, updatePosition);
	    	    }
		    }
		    
		    private function updatePosition(event:Event):void
		    {
                index = listOwner.itemRendererToIndex(this);
               
                if (index == listOwner.selectedIndex)
                {
                    currentState = 'selected';
                }
                else if (event.type == MouseEvent.ROLL_OVER)
                {
                    currentState = 'rollover';
                }
                else
                {
                    currentState = '';
                }
		    }
		    
		    private function dragMe(event:MouseEvent, img:Image, format:String):void 
		    {
		    	//trace("dragMe(event:MouseEvent, img:Image, format:String):void begins.");
				var dragInitiator:Image=Image(event.currentTarget);
				var ds:DragSource = new DragSource();
				
				ds.addData(img, format);
				ds.addData(imgUrl, "imgUrl");
				var imageProxy:Image = new Image();
				imageProxy.source = img.source;
				imageProxy.height=img.height;
				imageProxy.width=img.width;
				DragManager.doDrag(dragInitiator, ds, event, imageProxy, 0, 0, 1.00);
			}
			
			public function photoClick(event:Event):void
            {
            	/*var tw:mx.containers.TitleWindow = new mx.containers.TitleWindow();
            	tw.x = Image(event.currentTarget).mouseX;
            	tw.y = Image(event.currentTarget).mouseY;
				tw.title = "My Title";
				mx.managers.PopUpManager.addPopUp(Image(event.currentTarget), Image(event.currentTarget), false);
            	*/
            	data.showBigPhoto(event);
            	//Image(event.currentTarget).dispatchEvent(new Event("showBigPhoto"));
            }
		]]>
	</mx:Script>
    
<!--	<mx:Label id="position" width="100" height="20"/>-->
	
	<mx:Canvas id="imageBox" width="80%" height="80%" borderStyle="solid">
    	<mx:Image id="imgPhoto" source="{data.source}" width="100%" height="100%" 
    		toolTip="{data.toolTip}"
    	    horizontalAlign="center" verticalAlign="middle" 
    	    rollOverEffect="{glowImage}" 
            rollOutEffect="{unglowImage}"
            mouseMove="dragMe(event, imgPhoto, 'img');"
            updateComplete="imgUrl=data.source;"/>
            <!--click="photoClick(event);"
            updateComplete="imgUrl=data.source;"/>
            mouseDown="data.hindBigPhoto(event)"/>-->
	</mx:Canvas>
	
    <mx:states>
        <mx:State name="rollover">
<!--            <mx:SetProperty target="{position}" name="text" value="{positionString}" />-->
            <mx:SetStyle target="{imageBox}" name="styleName" value="thumbnailRolledOver" />
        </mx:State>
        <mx:State name="selected" basedOn="rollover">
            <mx:SetStyle target="{imageBox}" name="styleName" value="thumbnailSelected" />           
        </mx:State>
    </mx:states>
    
    <mx:Glow id="glowImage" duration="500" 
        alphaFrom="1.0" alphaTo="0.3" 
        blurXFrom="0.0" blurXTo="20.0" 
        blurYFrom="0.0" blurYTo="20.0" 
        color="0xff8000"/>
    <mx:Glow id="unglowImage" duration="500" 
        alphaFrom="0.3" alphaTo="1.0" 
        blurXFrom="20.0" blurXTo="0.0" 
        blurYFrom="20.0" blurYTo="0.0" 
        color="0xffb000"/>
</mx:VBox>